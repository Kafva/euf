; SMT 2
(set-info :source "Generated by CBMC 5.52.0 ()")
(set-option :produce-models true)
(set-logic QF_AUFBV)

; find_symbols
(declare-fun |goto_symex::&92;guard#1| () Bool)
; convert
; Converting var_no 0 with expr ID of symbol
(define-fun |B0| () Bool |goto_symex::&92;guard#1|)

; convert
; Converting var_no 1 with expr ID of symbol
(define-fun |B1| () Bool |goto_symex::&92;guard#1|)

; convert
; Converting var_no 2 with expr ID of not
(define-fun |B2| () Bool (not |goto_symex::&92;guard#1|))

; set_to true (equal)
(define-fun |__CPROVER_alloca_object#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_dead_object#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_deallocated#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_malloc_is_new_array#1| () Bool false)

; set_to true (equal)
(define-fun |__CPROVER_max_malloc_size#1| () (_ BitVec 64) (_ bv36028797018963968 64))

; set_to true (equal)
(define-fun |__CPROVER_memory_leak#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_new_object#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_next_thread_id#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_next_thread_key!0#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_pipe_count#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_rounding_mode!0#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_thread_id!0#1| () (_ BitVec 64) (_ bv0 64))

; the following is a substitute for lambda i. x
(declare-fun array_of.2 () (Array (_ BitVec 64) (_ BitVec 64)))
(assert (forall ((i (_ BitVec 64))) (= (select array_of.2 i) (_ bv0 64))))
; set_to true (equal)
(define-fun |__CPROVER_thread_key_dtors!0#1| () (Array (_ BitVec 64) (_ BitVec 64)) array_of.2)

; the following is a substitute for lambda i. x
(declare-fun array_of.3 () (Array (_ BitVec 64) (_ BitVec 64)))
(assert (forall ((i (_ BitVec 64))) (= (select array_of.3 i) (_ bv0 64))))
; set_to true (equal)
(define-fun |__CPROVER_thread_keys!0#1| () (Array (_ BitVec 64) (_ BitVec 64)) array_of.3)

; the following is a substitute for lambda i. x
(declare-fun array_of.4 () (Array (_ BitVec 64) (_ BitVec 1)))
(assert (forall ((i (_ BitVec 64))) (= (select array_of.4 i) (ite false #b1 #b0))))
; set_to true (equal)
(define-fun |__CPROVER_threads_exited#1| () (Array (_ BitVec 64) (_ BitVec 1)) array_of.4)

; find_symbols
(declare-fun |nondet_symex::nondet0| () (_ BitVec 32))
; set_to true (equal)
(define-fun |main::$tmp::return_value_nondet_int!0@1#2| () (_ BitVec 32) |nondet_symex::nondet0|)

; set_to true (equal)
(define-fun |main::1::a!0@1#2| () (_ BitVec 32) |main::$tmp::return_value_nondet_int!0@1#2|)

; find_symbols
(declare-fun |nondet_symex::nondet1| () (_ BitVec 32))
; set_to true (equal)
(define-fun |main::$tmp::return_value_nondet_int$0!0@1#2| () (_ BitVec 32) |nondet_symex::nondet1|)

; set_to true (equal)
(define-fun |main::1::b!0@1#2| () (_ BitVec 32) |main::$tmp::return_value_nondet_int$0!0@1#2|)

; set_to true (equal)
(define-fun |main::1::a!0@1#3| () (_ BitVec 32) (bvadd |main::1::a!0@1#2| |main::1::b!0@1#2|))

; set_to true
(assert (= |goto_symex::&92;guard#1| (not (bvsge |main::1::a!0@1#3| (_ bv9 32)))))

; set_to true (equal)
(define-fun |main::1::a!0@1#4| () (_ BitVec 32) (_ bv10 32))

; set_to true (equal)
(define-fun |main::1::b!0@1#3| () (_ BitVec 32) (_ bv5 32))

; set_to true (equal)
(define-fun |main::1::b!0@1#4| () (_ BitVec 32) (ite |goto_symex::&92;guard#1| |main::1::b!0@1#2| (_ bv5 32)))

; set_to true (equal)
(define-fun |main::1::a!0@1#5| () (_ BitVec 32) (ite |goto_symex::&92;guard#1| (_ bv10 32) |main::1::a!0@1#3|))

; find_symbols
(declare-fun |main::1::a!0@1#1| () (_ BitVec 32))
; convert
; Converting var_no 3 with expr ID of =
(define-fun |B3| () Bool (= |main::1::a!0@1#1| |main::1::a!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value_nondet_int!0@1#1| () (_ BitVec 32))
; convert
; Converting var_no 4 with expr ID of =
(define-fun |B4| () Bool (= |main::$tmp::return_value_nondet_int!0@1#1| |main::$tmp::return_value_nondet_int!0@1#1|))

; find_symbols
(declare-fun |main::1::b!0@1#1| () (_ BitVec 32))
; convert
; Converting var_no 5 with expr ID of =
(define-fun |B5| () Bool (= |main::1::b!0@1#1| |main::1::b!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value_nondet_int$0!0@1#1| () (_ BitVec 32))
; convert
; Converting var_no 6 with expr ID of =
(define-fun |B6| () Bool (= |main::$tmp::return_value_nondet_int$0!0@1#1| |main::$tmp::return_value_nondet_int$0!0@1#1|))

; convert
; Converting var_no 7 with expr ID of >=
(define-fun |B7| () Bool (bvsge |main::1::a!0@1#3| (_ bv9 32)))

; set_to true
(assert (bvsge (bvadd |main::1::a!0@1#5| |main::1::b!0@1#4|) (_ bv16 32)))

; convert
; Converting var_no 8 with expr ID of not
(define-fun |B8| () Bool (not false))

; set_to true
(assert |B8|)

(check-sat)

(get-value (|B0|))
(get-value (|B1|))
(get-value (|B2|))
(get-value (|B3|))
(get-value (|B4|))
(get-value (|B5|))
(get-value (|B6|))
(get-value (|B7|))
(get-value (|B8|))
(get-value (|__CPROVER_alloca_object#1|))
(get-value (|__CPROVER_dead_object#1|))
(get-value (|__CPROVER_deallocated#1|))
(get-value (|__CPROVER_malloc_is_new_array#1|))
(get-value (|__CPROVER_max_malloc_size#1|))
(get-value (|__CPROVER_memory_leak#1|))
(get-value (|__CPROVER_new_object#1|))
(get-value (|__CPROVER_next_thread_id#1|))
(get-value (|__CPROVER_next_thread_key!0#1|))
(get-value (|__CPROVER_pipe_count#1|))
(get-value (|__CPROVER_rounding_mode!0#1|))
(get-value (|__CPROVER_thread_id!0#1|))
(get-value (|__CPROVER_thread_key_dtors!0#1|))
(get-value (|__CPROVER_thread_keys!0#1|))
(get-value (|__CPROVER_threads_exited#1|))
(get-value (|goto_symex::&92;guard#1|))
(get-value (|main::$tmp::return_value_nondet_int!0@1#1|))
(get-value (|main::$tmp::return_value_nondet_int!0@1#2|))
(get-value (|main::$tmp::return_value_nondet_int$0!0@1#1|))
(get-value (|main::$tmp::return_value_nondet_int$0!0@1#2|))
(get-value (|main::1::a!0@1#1|))
(get-value (|main::1::a!0@1#2|))
(get-value (|main::1::a!0@1#3|))
(get-value (|main::1::a!0@1#4|))
(get-value (|main::1::a!0@1#5|))
(get-value (|main::1::b!0@1#1|))
(get-value (|main::1::b!0@1#2|))
(get-value (|main::1::b!0@1#3|))
(get-value (|main::1::b!0@1#4|))
(get-value (|nondet_symex::nondet0|))
(get-value (|nondet_symex::nondet1|))

(exit)
; end of SMT2 file
